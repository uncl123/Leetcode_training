import heapq
#学会这个库函数
class Solution:
    def topKFrequent(self, nums: List[int], k: int) -> List[int]:
        #要统计元素出现频率
        map_ = {} #nums[i]:对应出现的次数
        for i in range(len(nums)):
            map_[nums[i]] = map_.get(nums[i], 0) + 1
        
        #对频率排序
        #定义一个小顶堆，大小为k
        pri_que = [] #小顶堆
        
        #用固定大小为k的小顶堆，扫描所有频率的数值
        for key, freq in map_.items():
            heapq.heappush(pri_que, (freq, key)) #把(freq,key)加入到pri_que里面
            if len(pri_que) > k: #如果堆的大小大于了K，则队列弹出，保证堆的大小一直为k
                heapq.heappop(pri_que)  这里是默认pop出频率最小的
        
        #找出前K个高频元素，因为小顶堆先弹出的是最小的，所以倒序来输出到数组
        result = [0] * k
        for i in range(k-1, -1, -1):  #这里的倒序输出是重点，不能range(k,0,-1) 因为在
            result[i] = heapq.heappop(pri_que)[1]
        return result    

  ✅ 一、range(..., -1, -1) 中的 -1
这是**“循环停止条件”**，表示 “到这里就停止”，不会取到它本身。
它不是数组下标，而是 range() 的**“结束边界”**。
for i in range(2, -1, -1):  # i = 2, 1, 0 ✅
这表示从 2 开始，每次减 1，直到 超过 -1（但不包括 -1）。

✅ 二、数组下标 -1 是什么意思？
python
Copy
Edit
p = [1, 2, 3]
print(p[-1])  # 输出 3
在数组或列表中，-1 是 最后一个元素，p[-1] == p[len(p)-1]
p[-2] 是倒数第二个，依此类推
