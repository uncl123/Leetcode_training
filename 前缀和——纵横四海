在一个城市区域内，被划分成了n * m个连续的区块，每个区块都拥有不同的权值，代表着其土地价值。目前，有两家开发公司，A 公司和 B 公司，希望购买这个城市区域的土地。
现在，需要将这个城市区域的所有区块分配给 A 公司和 B 公司。
然而，由于城市规划的限制，只允许将区域按横向或纵向划分成两个子区域，而且每个子区域都必须包含一个或多个区块。
为了确保公平竞争，你需要找到一种分配方式，使得 A 公司和 B 公司各自的子区域内的土地总价值之差最小。

第一行输入两个正整数，代表 n 和 m。
接下来的 n 行，每行输出 m 个正整数。
输出描述
请输出一个整数，代表两个子区域内土地总价值之间的最小差距。
输入：
3 3
1 2 3
2 1 3
1 2 3

输出：
0
def main():
    import sys
    input=sys.stdin.read
    data= input().split()
    index=0
    n=int(data[index])
    index+=1
    m=int(data[index])
    sum=0
    vec=[]
    index+=1
    for i in range (n):
        row=[]
        for j in range (m):
            num = int(data[index])
            index+=1
            row.append(num)
            sum+=num
        vec.append(row)
    
    horizontal = [0] * n
    for i in range(n):
        for j in range (m):
            horizontal[i]+=vec[i][j]
    
    vertical =[0] * m
    for j in range(m):
        for i in range(n):
            vertical[j]+=vec[i][j]
    
    result = float('inf')
    horizontalCut=0
    for i in range(n):
        horizontalCut +=horizontal[i]
        result=min(result,abs(sum-2*horizontalCut))

    verticalCut=0
    for j in range(m):
        verticalCut +=vertical[j]
        result=min(result,abs(sum-2*verticalCut))        
    print(result)


if __name__ == "__main__":
    main()
